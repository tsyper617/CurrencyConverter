# -*- coding: utf-8 -*-
"""currency converter.py

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1kY2dElElIeDu67Oo6qTfCniYHvEv5lYe
"""

import requests

from ipywidgets import widgets, HBox, VBox, Dropdown
from IPython.display import display, HTML

def get_exchange_rates():
    url = "https://api.exchangerate-api.com/v4/latest/USD"

    try:
        response = requests.get(url)
        if response.status_code == 200:
            data = response.json()
            return data.get("rates", {})
        else:
            print("Failed to fetch data. Status code:", response.status_code)
            return {}
    except requests.RequestException as e:
        print("Request Exception:", e)
        return {}

# Get exchange rates
# save it all into rates.
rates = get_exchange_rates()
print(rates)

#converting function for the rates
def convert(currency, desiredcurrency, amount):
    currency = currency.upper()
    desiredcurrency = desiredcurrency.upper()
    amount = float(amount)

    if currency in rates and desiredcurrency in rates:
        if currency == 'USD':
            converted_amount = amount * rates[desiredcurrency]
            rounded_amount = round(converted_amount, 2)
            print(rounded_amount)
            return rounded_amount
        elif desiredcurrency == 'USD':
            converted_amount = amount / rates[currency]
            rounded_amount = round(converted_amount, 2)
            print(rounded_amount)
            return rounded_amount
        else:
            amount_usd = amount / rates[currency]
            converted_amount = amount_usd * rates[desiredcurrency]
            rounded_amount = round(converted_amount, 2)
            print(rounded_amount)
            return rounded_amount
    else:
        print("Either currency is invalid. Try again")


# Display the text centered using HTML formatting
display(HTML("<center> Currency Converter </center>"))


 # Create the widgets
amount_input = widgets.Text(description='Enter Amount:', placeholder='Enter amount', layout=widgets.Layout(width='200px'))
curr1 = Dropdown(options=list(rates.keys()), description='Currency 1:')
curr2 = Dropdown(options=list(rates.keys()), description='Currency 2:')

convert_button = widgets.Button(description='Convert', button_style='success', layout=widgets.Layout(width='200px'))

# Arrange the text input widgets horizontally
inputs_row = HBox([curr1, amount_input, curr2])

# Arrange the button widget in a separate box
button_box = VBox([convert_button])

# Arrange the input boxes and button vertically
layout = VBox([inputs_row, button_box])

# Display the layout
display(layout)

# Function to handle button click event
def on_button_click(button_click):
    #values from the input boxes
    currency_1 = curr1.value
    amount = amount_input.value
    currency_2 = curr2.value

    # Call convert
    convert(currency_1, currency_2, amount)

# Link the function to the button click event
convert_button.on_click(on_button_click)

